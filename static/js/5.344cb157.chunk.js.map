{"version":3,"sources":["services/fetchMovies.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/PageHeading/PageHeading.js","pages/HomePage.js"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","fetch","then","response","ok","json","Promise","reject","Error","results","fetchMoviesById","filmId","fetchMoviesByReviews","fetchMoviesByKeyword","keyword","resp","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","PageHeading","title","className","Status","HomePage","url","useRouteMatch","useState","movie","setMovie","status","setStatus","useEffect","API","catch","finally","Spinner","map","to","id"],"mappings":"yIAAA,8KAAMA,EAAW,gCACXC,EAAU,mCAEhB,SAASC,IACP,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IACnDG,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBAEjCN,MAAK,SAACC,GAAD,OAAcA,EAASM,WAGjC,SAASC,EAAgBC,GACvB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,oBAAuCZ,IAAWG,MAAK,SAACC,GAClE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBAapC,SAASI,EAAqBD,GAC5B,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,4BAA+CZ,IAAWG,MAAK,SAACC,GAC1E,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,qBAIpC,SAASK,EAAqBC,GAC5B,OAAOb,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAqDe,IAC9DZ,MAAK,SAACC,GAAD,OAAcA,EAASE,UAC5BH,MAAK,SAACa,GAAD,OAAUA,EAAKN,a,gCC5CV,SAASO,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECHM,SAASE,EAAeN,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXK,QAA4BA,OAAOC,YAAYC,OAAOV,GAAjE,CACA,IAAIW,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjB,EAAIQ,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETlB,GAAKQ,EAAKT,SAAWC,GAH8CS,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBX,EAAKG,IGJ3C,SAAqCoB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIf,OAAOgB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBpB,MAAM2B,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BxB,EAAKG,IILjF,WACb,MAAM,IAAI+B,UAAU,6IJIgF,G,0JKLvF,SAASC,EAAT,GAAiC,IAAVC,EAAS,EAATA,MACpC,OAAO,oBAAIC,UAAU,WAAd,SAA0BD,I,oBCK7BE,EACE,OADFA,EAEK,UAFLA,EAIM,WAGG,SAASC,IACtB,IAAQC,EAAQC,cAARD,IACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAASJ,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAUA,OARAC,qBAAU,WACRD,EAAUR,GACVU,MACG/D,KAAK2D,GACLK,OAAM,kBAAMH,EAAUR,MACtBY,SAAQ,kBAAMJ,EAAUR,QAC1B,IAGD,qCACE,cAACH,EAAD,CAAaC,MAAM,mBAClBS,IAAWP,GAAkB,cAACa,EAAA,EAAD,IAC9B,oBAAId,UAAU,iBAAd,SACGM,GACCA,EAAMS,KAAI,SAACT,GAAD,OACR,6BACE,cAAC,IAAD,CAAMU,GAAE,UAAKb,EAAL,kBAAkBG,EAAMW,IAAhC,SAAuCX,EAAMP,SADtCO,EAAMW","file":"static/js/5.344cb157.chunk.js","sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst API_KEY = \"1e1d4e13b76e9f56ba601bf1e8785fb3\";\r\n\r\nfunction fetchTrendingMovies() {\r\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(new Error(\"Nothind found\"));\r\n    })\r\n    .then((response) => response.results);\r\n}\r\n\r\nfunction fetchMoviesById(filmId) {\r\n  return fetch(`${BASE_URL}movie/${filmId}?api_key=${API_KEY}`).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(\"Nothind found\"));\r\n  });\r\n}\r\n\r\nfunction fetchMoviesByActors(filmId) {\r\n  return fetch(`${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}`).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(\"Nothing found\"));\r\n  });\r\n}\r\n\r\nfunction fetchMoviesByReviews(filmId) {\r\n  return fetch(`${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}`).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(\"Nothing found\"));\r\n  });\r\n}\r\n\r\nfunction fetchMoviesByKeyword(keyword) {\r\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${keyword}`)\r\n    .then((response) => response.json())\r\n    .then((resp) => resp.results);\r\n}\r\n\r\nexport { fetchMoviesByActors, fetchMoviesById, fetchMoviesByKeyword, fetchTrendingMovies, fetchMoviesByReviews, API_KEY };\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function PageHeading({ title }) {\r\n  return <h2 className=\"trending\">{title}</h2>;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport PageHeading from \"../components/PageHeading/PageHeading\";\r\nimport * as API from \"../services/fetchMovies\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\n\r\nconst Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default function HomePage() {\r\n  const { url } = useRouteMatch();\r\n  const [movie, setMovie] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n    API.fetchTrendingMovies()\r\n      .then(setMovie)\r\n      .catch(() => setStatus(Status.REJECTED))\r\n      .finally(() => setStatus(Status.IDLE));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading title=\"Trending today\" />\r\n      {status === Status.PENDING && <Spinner />}\r\n      <ul className=\"trending-today\">\r\n        {movie &&\r\n          movie.map((movie) => (\r\n            <li key={movie.id}>\r\n              <Link to={`${url}movies/${movie.id}`}>{movie.title}</Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}